import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.awt.geom.RoundRectangle2D;
import javax.imageio.ImageIO;
import java.io.File;
import java.io.IOException;

public class BTD7 extends JPanel {
    private static final int BUTTON_WIDTH = 200;
    private static final int BUTTON_HEIGHT = 50;
    private static final int BUTTON_Y_GAP = 100;

    enum State {
        Menu,
        Game,
        Settings
    };

    State state;
    BufferedImage background;
    String howToPlayText;

    public BTD7() {
        state = State.Menu;

        try {
            background = ImageIO.read(new File("menu.png"));  
        } catch (IOException e) {
            System.out.println("Error loading background image.");
            e.printStackTrace();
        }

        howToPlayText ="Game BTD7 Click to play";
        
        addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if (state == State.Menu) {
                    int buttonX = (getWidth() - BUTTON_WIDTH) / 2;
                    if (e.getX() >= buttonX && e.getX() <= buttonX + BUTTON_WIDTH) {
                        if (e.getY() >= getHeight() / 2 && e.getY() <= getHeight() / 2 + BUTTON_HEIGHT) {
                            state = State.Game;
                        } else if (e.getY() >= getHeight() / 2 + BUTTON_Y_GAP && e.getY() <= getHeight() / 2 + BUTTON_Y_GAP + BUTTON_HEIGHT) {
                            state = State.Settings;
                        }
                        repaint();
                    }
                }
            }
        });
    }

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;

        g2d.drawImage(background, 0, 0, this.getWidth(), this.getHeight(), this);

        switch (state) {
            case Menu:
                drawButton(g2d, "Start", (getWidth() - BUTTON_WIDTH) / 2, getHeight() / 2, BUTTON_WIDTH, BUTTON_HEIGHT, Color.BLUE, Color.CYAN);
                drawButton(g2d, "Settings", (getWidth() - BUTTON_WIDTH) / 2, getHeight() / 2 + BUTTON_Y_GAP, BUTTON_WIDTH, BUTTON_HEIGHT, Color.MAGENTA, Color.PINK);
                break;

            case Game:
                g2d.setColor(Color.BLUE);
                g2d.drawString("Game", 100, 100);
                break;

            case Settings:
                g2d.setColor(Color.BLACK);
                g2d.setFont(new Font("Arial", Font.PLAIN, 20));
                drawString(g2d, howToPlayText, 100, 100);
                break;
        }
    }

    private void drawButton(Graphics2D g, String text, int x, int y, int width, int height, Color color1, Color color2) {
        g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        GradientPaint gradient = new GradientPaint(x, y, color1, x + width / 2, y + height / 2, color2, true);
        g.setPaint(gradient);

        RoundRectangle2D.Double rect = new RoundRectangle2D.Double(x, y, width, height, 20, 20);
        g.fill(rect);

        g.setColor(Color.WHITE);
        g.drawString(text, x + width / 2 - 20, y + height / 2 + 5);
    }

    private void drawString(Graphics g, String text, int x, int y) {
        for (String line : text.split("<br>"))
            g.drawString(line, x, y += g.getFontMetrics().getHeight());
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("Tower Defense");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(1250, 800);
        BTD7 game = new BTD7();
        frame.add(game);
        frame.setVisible(true);
    }
}
